{
  "openapi": "3.0.3",
  "info": {
    "title": "Connect Four JS API",
    "description": "REST API for Connect Four JS service",
    "version": "1.0.0",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "/",
      "description": "Index"
    },
    {
      "name": "/games",
      "description": "Operating on games"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "Localhost"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["/"],
        "summary": "Check server status",
        "description": "Returns an object with a status message",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Message indicating server is running",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "headers": {
              "content-type": {
                "$ref": "#/definitions/headers/content-type/json"
              }
            }
          }
        }
      }
    },
    "/games": {
      "get": {
        "tags": ["/games"],
        "summary": "Get all games",
        "description": "",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/schemas/Game"
                  }
                }
              }
            },
            "headers": {
              "content-type": {
                "$ref": "#/definitions/headers/content-type/json"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["/games"],
        "summary": "Create games",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/schemas/GameCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message",
                      "type": "string"
                    },
                    "game": {
                      "$ref": "#/definitions/schemas/Game"
                    }
                  }
                }
              }
            },
            "headers": {
              "content-type": {
                "$ref": "#/definitions/headers/content-type/json"
              }
            }
          },
          "400": {
            "description": "Unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "description": "Error message",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "content-type": {
                "$ref": "#/definitions/headers/content-type/json"
              }
            }
          }
        }
      }
    },
    "/games/{id}": {
      "get": {
        "tags": ["/games"],
        "summary": "Get a game by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": "test",
            "schema": {
              "description": "Game id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Game found message",
                      "type": "string"
                    },
                    "game": {
                      "$ref": "#/definitions/schemas/Game"
                    }
                  }
                }
              }
            },
            "headers": {
              "content-type": {
                "$ref": "#/definitions/headers/content-type/json"
              }
            }
          },
          "404": {
            "description": "Unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Game not found message",
                      "type": "string"
                    },
                    "game": {
                      "$ref": "#/definitions/schemas/GameNullable"
                    }
                  }
                }
              }
            },
            "headers": {
              "content-type": {
                "$ref": "#/definitions/headers/content-type/json"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["/games"],
        "summary": "Update game by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": "test",
            "schema": {
              "description": "Game id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/schemas/GameUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Game updated message",
                      "type": "string"
                    },
                    "game": {
                      "$ref": "#/definitions/schemas/Game"
                    }
                  }
                }
              }
            },
            "headers": {
              "content-type": {
                "$ref": "#/definitions/headers/content-type/json"
              }
            }
          },
          "404": {
            "description": "Unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Game not found message",
                      "type": "string"
                    },
                    "game": {
                      "$ref": "#/definitions/schemas/GameNullable"
                    }
                  }
                }
              }
            },
            "headers": {
              "content-type": {
                "$ref": "#/definitions/headers/content-type/json"
              }
            }
          },
          "400": {
            "description": "Unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "description": "Error message",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "content-type": {
                "$ref": "#/definitions/headers/content-type/json"
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["/games"],
        "summary": "Delete a game by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "example": "test",
            "schema": {
              "description": "Game id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Game deleted message",
                      "type": "string"
                    },
                    "game": {
                      "$ref": "#/definitions/schemas/Game"
                    }
                  }
                }
              }
            },
            "headers": {
              "content-type": {
                "$ref": "#/definitions/headers/content-type/json"
              }
            }
          },
          "404": {
            "description": "Unsuccessful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Game not found message",
                      "type": "string"
                    },
                    "game": {
                      "$ref": "#/definitions/schemas/GameNullable"
                    }
                  }
                }
              }
            },
            "headers": {
              "content-type": {
                "$ref": "#/definitions/headers/content-type/json"
              }
            }
          }
        }
      }
    },
    "/games/count": {
      "get": {
        "tags": ["/games"],
        "summary": "Get count of games in db",
        "description": "",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "description": "Success message",
                      "type": "string"
                    },
                    "count": {
                      "description": "Count for the amount of games in db",
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "headers": {
              "content-type": {
                "$ref": "#/definitions/headers/content-type/json"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "headers": {
      "content-type": {
        "json": {
          "description": "application/json",
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "schemas": {
      "DefaultErrorResponse": {
        "type": "object",
        "properties": {}
      },
      "Game": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique id",
            "type": "string"
          },
          "player1Name": {
            "description": "Name of player 1",
            "type": "string"
          },
          "player2Name": {
            "description": "Name of player 2",
            "type": "string"
          },
          "currentPlayerIndex": {
            "description": "Index of the current player",
            "type": "integer"
          },
          "lastTurnColumnIndex": {
            "description": "Last move played",
            "type": "integer",
            "nullable": true
          },
          "winner": {
            "description": "Player index of the game winner",
            "type": "integer",
            "nullable": true
          },
          "gameState": {
            "description": "JSON string representing game state",
            "type": "string"
          }
        }
      },
      "GameNullable": {
        "type": "object",
        "nullable": true,
        "properties": {
          "_id": {
            "description": "Unique id",
            "type": "string"
          },
          "player1Name": {
            "description": "Name of player 1",
            "type": "string"
          },
          "player2Name": {
            "description": "Name of player 2",
            "type": "string"
          },
          "currentPlayerIndex": {
            "description": "Index of the current player",
            "type": "string"
          },
          "lastTurnColumnIndex": {
            "description": "Last move played",
            "type": "integer",
            "nullable": true
          },
          "winner": {
            "description": "Player index of the game winner",
            "type": "integer",
            "nullable": true
          },
          "gameState": {
            "description": "JSON string representing game state",
            "type": "string"
          }
        }
      },
      "GameCreate": {
        "type": "object",
        "properties": {
          "_id": {
            "description": "Unique id",
            "type": "string",
            "nullable": true
          },
          "player1Name": {
            "description": "Name of player 1",
            "type": "string",
            "nullable": true
          },
          "player2Name": {
            "description": "Name of player 2",
            "type": "string",
            "nullable": true
          },
          "currentPlayerIndex": {
            "description": "Index of the current player",
            "type": "integer",
            "nullable": true
          },
          "lastTurnColumnIndex": {
            "description": "Last move played",
            "type": "integer",
            "nullable": true
          },
          "winner": {
            "description": "Player index of the game winner",
            "type": "integer",
            "nullable": true
          },
          "gameState": {
            "description": "JSON string representing game state",
            "type": "string",
            "nullable": true
          }
        }
      },
      "GameUpdate": {
        "type": "object",
        "properties": {
          "player1Name": {
            "description": "Name of player 1",
            "type": "string",
            "nullable": true
          },
          "player2Name": {
            "description": "Name of player 2",
            "type": "string",
            "nullable": true
          },
          "currentPlayerIndex": {
            "description": "Index of the current player",
            "type": "integer",
            "nullable": true
          },
          "lastTurnColumnIndex": {
            "description": "Last move played",
            "type": "integer",
            "nullable": true
          },
          "winner": {
            "description": "Player index of the game winner",
            "type": "integer",
            "nullable": true
          },
          "gameState": {
            "description": "JSON string representing game state",
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
}
